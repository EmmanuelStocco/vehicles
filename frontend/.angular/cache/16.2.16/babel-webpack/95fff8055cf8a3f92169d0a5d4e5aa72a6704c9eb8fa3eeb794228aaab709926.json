{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VehicleService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/vehicles';\n  }\n  getAll() {\n    return this.http.get(this.apiUrl);\n  }\n  getById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  create(vehicle) {\n    return this.http.post(this.apiUrl, vehicle);\n  }\n  update(id, vehicle) {\n    return this.http.patch(`${this.apiUrl}/${id}`, vehicle);\n  }\n  delete(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function VehicleService_Factory(t) {\n      return new (t || VehicleService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: VehicleService,\n      factory: VehicleService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["VehicleService","constructor","http","apiUrl","getAll","get","getById","id","create","vehicle","post","update","patch","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\emmanuel\\Desktop\\desafio novo\\frontend\\src\\app\\services\\vehicle.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Vehicle } from '../models/vehicle.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VehicleService {\r\n  private apiUrl = 'http://localhost:3000/vehicles';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<Vehicle[]> {\r\n    return this.http.get<Vehicle[]>(this.apiUrl);\r\n  }\r\n\r\n  getById(id: number): Observable<Vehicle> {\r\n    return this.http.get<Vehicle>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  create(vehicle: Vehicle): Observable<Vehicle> {\r\n    return this.http.post<Vehicle>(this.apiUrl, vehicle);\r\n  }\r\n\r\n  update(id: number, vehicle: Vehicle): Observable<Vehicle> {\r\n    return this.http.patch<Vehicle>(`${this.apiUrl}/${id}`, vehicle);\r\n  }\r\n\r\n  delete(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAEV;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEAG,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAC,MAAMA,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EACtD;EAEAE,MAAMA,CAACJ,EAAU,EAAEE,OAAgB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACU,KAAK,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EAClE;EAEAI,MAAMA,CAACN,EAAU;IACf,OAAO,IAAI,CAACL,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBAvBWP,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdjB,cAAc;MAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}